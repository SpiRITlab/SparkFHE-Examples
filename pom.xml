<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>spiritlab.sparkfhe</groupId>
  <artifactId>sparkfhe-example</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>sparkfhe-example</name>
  <url>https://github.com/SpiRITlab/SparkFHEJava</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.jupiter.version>5.3.2</junit.jupiter.version>
    <sparkfhe.maven.repo>file://${project.basedir}/../SparkFHEMavenRepo</sparkfhe.maven.repo>

    <sparkfhe.lib.rev>master</sparkfhe.lib.rev>
    <sparkfhe.lib.url.base>https://raw.githubusercontent.com/SpiRITlab/SparkMavenRepo/${sparkfhe.lib.rev}/libSparkFHE</sparkfhe.lib.url.base>
    <downloaded.sparkfhe.lib.path>libSparkFHE/lib</downloaded.sparkfhe.lib.path>

    <scala.binary.version>2.12</scala.binary.version>
    <spark.version>3.0.0-SNAPSHOT</spark.version>
    <scala.version>2.12.7</scala.version>
    <fasterxml.jackson.version>2.9.6</fasterxml.jackson.version>
  </properties>

  <!-- use the following commands to determine the correct profile -->
  <!-- mvn help:active-profiles | grep -v INFO -->
  <profiles>
    <profile>
      <id>unix-x86</id>
      <activation>
        <os>
          <family>unix</family>
          <name>Linux</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <sparkfhe.lib.url>${sparkfhe.lib.url.base}/libSparkFHE-unix-x86_64.zip</sparkfhe.lib.url>
      </properties>
    </profile>
    <profile>
      <id>unix-amd64</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
          <arch>amd64</arch>
        </os>
      </activation>
      <properties>
        <sparkfhe.lib.url>${sparkfhe.lib.url.base}/libSparkFHE-unix-amd64.zip</sparkfhe.lib.url>
      </properties>
    </profile>
    <profile>
      <id>mac-x86</id>
      <activation>
        <os>
          <family>mac</family>
          <name>mac os x</name>
          <arch>x86_64</arch>
        </os>
      </activation>
      <properties>
        <sparkfhe.lib.url>${sparkfhe.lib.url.base}/libSparkFHE-mac-x86_64.zip</sparkfhe.lib.url>
      </properties>
    </profile>
  </profiles>

  <distributionManagement>
    <repository>
      <id>release</id>
      <url>${sparkfhe.maven.repo}</url>
      <uniqueVersion>false</uniqueVersion>
    </repository>
    <snapshotRepository>
      <id>snapshot</id>
      <url>${sparkfhe.maven.repo}</url>
      <uniqueVersion>true</uniqueVersion>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>sparkfhe-remote</id>
      <url>https://raw.githubusercontent.com/SpiRITlab/SparkMavenRepo/master</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- We will skip all junit5 tests by $> mvn package -Dmaven.test.skip=true -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- =============== Spark dependency block =============== -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${fasterxml.jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${fasterxml.jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${fasterxml.jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${fasterxml.jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.json4s</groupId>
      <artifactId>json4s-jackson_${scala.binary.version}</artifactId>
      <version>3.5.3</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-actors</artifactId>
      <version>2.11.12</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-parser-combinators_${scala.binary.version}</artifactId>
      <version>1.1.0</version>
    </dependency>

    <dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-core_${scala.binary.version}</artifactId>
    <version>${spark.version}</version>
    <scope>compile</scope>
    </dependency>
    <dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-sql_${scala.binary.version}</artifactId>
    <version>${spark.version}</version>
    <scope>compile</scope>
    </dependency>
    <dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
    <version>${spark.version}</version>
    <scope>compile</scope>
    </dependency>
    <dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-launcher_${scala.binary.version}</artifactId>
    <version>${spark.version}</version>
    <scope>compile</scope>
    </dependency>
    <dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-mllib_${scala.binary.version}</artifactId>
    <version>${spark.version}</version>
    <scope>compile</scope>
    </dependency>
    <dependency>
    <groupId>org.apache.spark</groupId>
    <artifactId>spark-mllib-local_${scala.binary.version}</artifactId>
    <version>${spark.version}</version>
    <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- =============== END of Spark dependency block =============== -->

    <dependency>
      <groupId>spiritlab.sparkfhe</groupId>
      <artifactId>sparkfhe-api</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <outputDirectory>target/classes</outputDirectory>
    <testOutputDirectory>target/test-classes</testOutputDirectory>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>com.googlecode.maven-download-plugin</groupId>
          <artifactId>download-maven-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <!-- the wget goal actually binds itself to this phase by default -->
              <phase>process-resources</phase>
              <goals>
                <goal>wget</goal>
              </goals>
              <configuration>
                <url>${sparkfhe.lib.url}</url>
                <outputDirectory>${project.basedir}</outputDirectory>
                <unpack>true</unpack>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <systemPropertyVariables>
              <java.library.path>${downloaded.sparkfhe.lib.path}</java.library.path>
            </systemPropertyVariables>
            <argLine>-Djava.library.path=${downloaded.sparkfhe.lib.path}</argLine>
            <!-- DONT DO PARALLEL TESTS -->
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
          <executions>
            <execution>
              <id>enforce-valid-os</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireActiveProfile>
                    <profiles>unix-x86,unix-amd64,mac-x86</profiles>
                    <all>false</all>
                    <message>Unsupported operating system. Currently only unix-x86, unix-amd64, and mac-x86 are supported</message>
                  </requireActiveProfile>
                </rules>
                <fail>true</fail>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
  </build>

</project>
